{"version":3,"file":"static/js/699.e0b3961b.chunk.js","mappings":"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","sources":["components/LoginForm/Vector-lock.svg","components/LoginForm/Vector.svg","components/LoginForm/LoginForm.styled.js","components/RegistrationForm/RegistrationForm.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/PasswordProgressBar/PasswordProgressBar.styled.js","components/PasswordProgressBar/PasswordProgressBar.jsx","components/RegistrationForm/RegistrationForm.jsx","components/RegistrationPageLeft/RegistrationPageLeft.styled.js","components/RegistrationPageLeft/RegistrationPageLeft.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgVectorLock(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 21,\n    viewBox: \"0 0 17 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5 7H13.5V5C13.5 2.24 11.26 0 8.5 0C5.74 0 3.5 2.24 3.5 5V7H2.5C1.4 7 0.5 7.9 0.5 9V19C0.5 20.1 1.4 21 2.5 21H14.5C15.6 21 16.5 20.1 16.5 19V9C16.5 7.9 15.6 7 14.5 7ZM8.5 16C7.4 16 6.5 15.1 6.5 14C6.5 12.9 7.4 12 8.5 12C9.6 12 10.5 12.9 10.5 14C10.5 15.1 9.6 16 8.5 16ZM11.6 7H5.4V5C5.4 3.29 6.79 1.9 8.5 1.9C10.21 1.9 11.6 3.29 11.6 5V7Z\",\n    fill: \"#E0E0E0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVectorLock);\nexport default __webpack_public_path__ + \"static/media/Vector-lock.8eaaa6fe30d4fe41fcc4d961656d7115.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgVector(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 21,\n    height: 16,\n    viewBox: \"0 0 21 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.5 0H2.5C1.4 0 0.51 0.9 0.51 2L0.5 14C0.5 15.1 1.4 16 2.5 16H18.5C19.6 16 20.5 15.1 20.5 14V2C20.5 0.9 19.6 0 18.5 0ZM18.5 4L10.5 9L2.5 4V2L10.5 7L18.5 2V4Z\",\n    fill: \"#E0E0E0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVector);\nexport default __webpack_public_path__ + \"static/media/Vector.5a58fa9a7b1c77f266dc65e36b85b886.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const MainLogo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 120px;\n  height: 30px;\n  margin-left:auto;\n  margin-right:auto;\n  margin-bottom: 60px;\n  /* @media screen and (min-width: 768px) {\n    width: 180px;\n    height: 40px;\n    justify-content:center;\n  } */\n`;\n\nexport const LoginPageContainer = styled.div`\nposition: relative;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 107px 20px;\n  width: 100%;\n  height: 100vh;\n  @media screen and (max-width: 767px) {\n    background-color: #FFFFFF;\n  }\n  @media screen and (min-width: 768px) and (mix-width: 1279px) {\n    padding: 60px 118px 196px 118px;\n    height: 100vh;\n    background-color: #E7EAF2;\n    width: 100%;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 136px 84px 116px 84px;\n    height: 100vh;\n    background-color: #E7EAF2;\n    width: 100%;\n    display:flex;\n    /* align-items:center; */\n    /* background: rgba(255, 255, 255, 0.4);\n    backdrop-filter: blur(50px); */\n\n  }\n`;\n\nexport const LoginPageDesktopContainer = styled.div`\n    @media screen and (min-width: 768px) {\n    /* padding: 60px 118px;\n    height: 616px;\n    background-color: #E7EAF2;\n    width: 100%; */\n    display: flex;\n    flex-direction: column;\n    background-color: #FFFFFF;\n    margin-right: auto;\n    margin-left: auto;\n    /* margin-top: 148px; */\n    padding: 40px 60px 60px 60px;\n    width: 534px;\n    height: 468px;\n    border-radius: 20px;\n\n  }\n`;\n\nexport const MainFrame = styled.div`\n@media screen and (max-width: 767px) {\n    display:none;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 498px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    margin-bottom:50px;\n  }\n \n  @media screen and (min-width: 1280px) {\n    /* padding: 136px 84px 116px 84px; */\n    /* height: 100vh; */\n    width: 435px;\n    height: 420px;\n    background-color: #E7EAF2;\n    /* width: 100%; */\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    margin:0; \n  }\n`;\n\nexport const SvgFrame = styled.img`\n@media screen and (min-width: 1280px) {\n    width:435px;\n    height:420px;\n    margin-bottom:30px;\n  }\n`;\n\nexport const MainFrameText = styled.p`\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 45px;\n    margin-left:40px;\n    font-family: 'Poppins';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 45px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    color: #000000;\n    /* z-index: 1; */\n  }\n`;\n\nexport const LogForm = styled(Form)`\n  display: flex;\n  /* -webkit-box-pack: center; */\n  justify-content: center;\n  flex-direction: column;\n  /* -webkit-box-align: center; */\n  align-items: center;\n`;\n\nexport const LogBtns = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* -webkit-box-pack: center; */\n  justify-content: center;\n`;\n\nexport const LoginBtn = styled.button`\n  width: 280px;\n  height: 50px;\n  border-radius: 20px;\n  border: none;\n  background-color: #24cca7;\n  padding: 13px 98px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #ffffff;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const RegisterBtn = styled.button`\n  text-decoration: none;\n  width: 280px;\n  height: 50px;\n  border-radius: 20px;\n  border: 1px solid #4a56e2;\n  background-color: #ffffff;\n  padding: 13px 60px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  text-decoration:none;\n  color: #4a56e2;\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 0;\n  width: 100%;\n  height: 32px;\n  display: block;\n  margin-left: 20px;\n  border: none;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  color: #BDBDBD;\n`;\n\nexport const InputField = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nexport const InputLabel = styled.label`\n  width: 280px;\n  /* border-bottom: 1px solid #e0e0e0; */\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    width: 400px\n  }\n`;\n\nexport const Svg = styled.img`\n/* width:24px;\nheight:24px; */\n  /* margin-left: 10px; */\n`;\n\nexport const SvgWrapper = styled.span`\nwidth:24px;\nheight:24px;\nmargin-left: 10px;\ndisplay:flex;\nalign-items: center;\njustify-content: center;\n`;\n\nexport const ErrorText = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  color: red;\n`;\n\nexport const EllipseTop = styled.img`\n/* position: absolute;\n/* z-index: -2; */\n/* left: -50px;\ntop: 585px; */\n`\n\nexport const EllipseBottom = styled.img`\n    /* content: \"\";\n    position: absolute;\n    display: block;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(/static/media/purple_elipse.488cddf5.svg);\n    background-position: bottom -130px left -142px;\n    z-index: -1; */\n`\n\n// const ErrorMessage = styled.p`\n//     margin-top: 6px;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n// `;\n\n// const InputWrapper = styled.div`\n//     padding: 8px 0;\n//     margin-right: auto;\n//     display: flex;\n//     align-items: baseline;\n//     border-bottom: 2px solid #BDBDBD;\n// `;\n\n// const Label = styled.label`\n// width: 280px\n// `;\n\n// const MainWrapper = styled.form`\n// display: flex;\n// flex-direction: column;\n// `;\n\n//общий див\n\n/* margin-left: auto;\n    margin-right: auto;\n    padding: 20px;\n    width: 100%;\n    height: 100%; */\n\n//стили формы\n\n/* display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    flex-direction: column;\n    -webkit-box-align: center;\n    align-items: center; */\n\n//стили инпута\n\n/* width: 280px;\n    height: 36px;\n    color: rgb(0, 0, 0);\n    padding-top: 5px;\n    padding-bottom: 5px;\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    border-image: initial;\n    border-bottom: 1px solid rgb(224, 224, 224);\n    background: transparent;\n    display: block;  */\n\n//стили кнопки\n\n/* font-family: Verdana;\n    height: 44px;\n    width: 182px;\n    font-weight: 700;\n    font-size: 14px;\n    background: rgb(252, 132, 45);\n    color: rgb(255, 255, 255);\n    border: 2px solid rgb(252, 132, 45);\n    border-radius: 30px;\n    box-shadow: rgb(252 132 45 / 50%) 0px 4px 10px;\n    padding-top: 13px;\n    padding-bottom: 13px;\n    margin-top: 20px;\n    margin-left: auto;\n    margin-right: auto; */\n\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n// import { Button } from '@mui/material';\n// import { css } from '@emotion/react';\n\nexport const FormContainer = styled.div`\nmax-width: 400px;\npadding: 32px 20px 36px 20px;\nmargin-right: auto;\nmargin-left: auto;\nbackground-color: #fff;\n\n    @media screen and (min-width: 768px) {\n        max-width: 533px;\n        height: 616;\n        margin: 48px auto;\n        padding: 40px 60px 66px 65px;\n        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n        border-radius: 20px;\n    }\n\n     @media screen and (min-width: 1280px) {\n        margin: 52px 99px;\n     }\n`;\n\nexport const FormName = styled.div`\ndisplay: flex;\njustify-content: center;\nmargin-right: auto;\nmargin-left: auto;\n  margin-bottom: 60px;\n`;\n\nexport const ContactField = styled(Field)`\n  position: relative;\n  width: 100%;\n  display: flex;\n  padding-bottom: 10px;\n  margin-top: 40px;\n  border: transparent;\n\n\n  ::placeholder{\n    color: #BDBDBD;\n    font-family: 'Circe';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n  }\n`;\n\nexport const Icon = styled.svg`\nfill: #E0E0E0;\n&:hover {\n    color: #24CCA7;\n}\n`;","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n// import Button from '@mui/material/Button';\n\nconst dynamicStyles = props =>\n    css`\n    color: ${props.color}; \n    background-color: ${props.bgColor};\n    border: ${props.border}; \n    border-color: ${props.borderColor};\n    `\n\nexport const ButtonStyles = styled.button`\nfont-family: 'Circe';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 18px;\nline-height: 27px;\ntext-align: center;\nletter-spacing: 0.1em;\ntext-transform: uppercase;\njustify-content: center;\n \ndisplay: flex;\nmargin-right: auto;\nmargin-left: auto;\nmargin-top: 20px;\npadding: 13px;\nborder-radius: 20px; \nwidth: 300px;\nheight: 50px;\n\ncursor: pointer;\noutline: none; \n \n${dynamicStyles}\n\n\n@media screen and (max-width: 767px) {\n    width: 280px;\n  }\n`;\n\n","import { useNavigate   } from 'react-router-dom';\nimport { ButtonStyles } from './Button.styled';\n\nconst ButtonGroup = (props) => {\n    const navigate = useNavigate ();\n    \n    return (\n        <div>\n            <ButtonStyles\n                type=\"submit\"\n                color='#fff'\n                bgColor='#24CCA7'\n                border='none'\n            >\n                {props.register} </ButtonStyles>\n            \n            <ButtonStyles\n                // to=\"/registration\"\n                type=\"button\"\n                onClick={() => {navigate('/login')}}\n                color='#4A56E2'\n                bgColor='#ffffff'\n                // border='solid'\n                borderColor='#4A56E2'\n            >\n                {props.login}</ButtonStyles>\n        </div>\n    )\n}\n\nexport default ButtonGroup;","import styled from '@emotion/styled';\n\nexport const ProgressBar = styled.div`\n    background-color: #24CCA7;\n    border: 2px solid #24CCA7;\n    height: 2px;\n    width: 100%;\n`;","import React from \"react\";\n// import LinearProgress from \"@mui/material/LinearProgress\";\nimport {ProgressBar} from './PasswordProgressBar.styled'\n\nconst PasswordProgressBar = () => {\n    // console.log(value);\n    return (\n        <ProgressBar />\n            // <LinearProgress\n            //     variant=\"determinate\"\n            //     value={progress}\n            // />\n       \n    )\n}\n\nexport default PasswordProgressBar;","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\n// import { TextField, InputAdornment } from '@mui/material';\nimport logo from '../../images/logo.png';\n// import icon from '../../images/symbol-defs.svg';\n// import { useDispatch } from 'react-redux';\n// import { register } from 'redux/auth/authOperations';\n\nimport {InputLabel, LogForm, InputField, ErrorText, SvgWrapper, Svg, Input } from '../LoginForm/LoginForm.styled'\nimport svgMail from '../LoginForm/Vector.svg';\nimport svgLock from '../LoginForm/Vector-lock.svg';\nimport {\n    FormContainer,\n    FormName,\n} from './RegistrationForm.styled';\nimport ButtonGroup from '../Button/Button';\nimport PasswordProgressBar from 'components/PasswordProgressBar/PasswordProgressBar';\n\nconst RegistrationForm = () => {\n\n  //  const dispatch = useDispatch();\n  const schema = yup.object().shape({\n    email: yup.string().required(),\n    password: yup.string().required(),\n    confirmPassword: yup.string().required(),\n    name: yup.string().required(),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n  };\n\nconst handleSubmit = (values, { resetForm }) => {\n  console.log(values);\n  const { email, password, confirmPassword, name } = values;\n  \n    // dispatch(register({ name, email, password }));\n  resetForm();\n  console.log(email, password, confirmPassword, name);\n  };\n  \n  \n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n  const ConfirmPasswordInputId = nanoid();\n  const nameInputId = nanoid();\n\n  const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n  };\n\n  return (\n    <FormContainer>\n      <FormName>\n        <img src={logo} height={40} alt={'wallet-logo'}/>\n      </FormName>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        \n        onSubmit={handleSubmit}\n        validateOnChange\n      >\n        <LogForm\n          autoComplete=\"off\"\n          // onChange={(event) => {\n          // console.log(event.nativeEvent.data);\n          // }}\n        >\n            \n        <InputLabel htmlFor=\"email\">\n          <InputField>\n            <SvgWrapper><Svg src={svgMail} alt=\"envelope\" /></SvgWrapper>\n              <Input type=\"email\" name=\"email\" id={emailInputId} placeholder=\"E-mail\" />\n          </InputField>\n          <FormError name=\"email\" />\n        </InputLabel> \n            \n        <InputLabel htmlFor=\"password\">\n          <InputField>\n            <SvgWrapper><Svg src={svgLock} alt=\"lock\" /></SvgWrapper>\n              <Input type=\"password\" name=\"password\" id={passwordInputId} placeholder=\"Password\" />\n          </InputField>\n          <FormError name=\"password\" />\n        </InputLabel>\n            \n        <InputLabel htmlFor=\"confirmPassword\">\n          <InputField>\n            <SvgWrapper><Svg src={svgLock} alt=\"lock\" /></SvgWrapper>\n              <Input\n                type=\"password\"\n                name=\"confirmPassword\"\n                id={ConfirmPasswordInputId}\n                placeholder=\"Confirm password\"\n              />\n            </InputField>\n            <PasswordProgressBar />\n          <FormError name=\"confirmPassword\" />\n          </InputLabel>\n\n        <InputLabel htmlFor=\"name\">\n          <InputField>\n            <SvgWrapper><Svg src={svgMail} alt=\"lock\" /></SvgWrapper>\n              <Input type=\"text\" name=\"name\" id={nameInputId} placeholder=\"Name\" />\n          </InputField>\n          <FormError name=\"name\" />\n        </InputLabel>\n                    \n        <ButtonGroup register='REGISTER' login='LOG IN' />\n                  \n        </LogForm>\n      </Formik>\n    </FormContainer> \n  );\n};\n\nexport default RegistrationForm;\n\n","import styled from '@emotion/styled';\nimport { Grid } from '@mui/material';\n\nexport const FinanceAppContainer = styled.div`\n    display: none;\n\n    @media screen and (min-width: 768px) {\n        padding-top: 60px;  \n        display: flex;\n        justify-content: center;\n        min-height: 10em;\n        vertical-align: middle;\n    }\n\n    @media screen and (min-width: 1280px) {\n        display: inline;\n        padding-top: 155px;\n        padding-bottom: 155px;\n    }\n`;\n\nexport const AppImg = styled.img`\n    @media screen and (min-width: 768px) {\n            width: 275px;\n            display: flex;\n    }\n\n    @media screen and (min-width: 1280px) {\n            width: 455px;\n    }\n`;\n\nexport const RegistrationPageText = styled.p`\n\n    @media screen and (min-width: 768px) {\n        font-family: 'Poppins';\n        font-style: normal;\n        font-weight: 400;\n        font-size: 30px;\n        line-height: 45px;\n    \n        display: flex;\n        align-items: center;\n    }\n\n    @media screen and (min-width: 1280px) {\n        text-align: center;\n        justify-content: center;\n        margin-top: 30px;\n    }\n`;\n\nexport const ContainerForBlur = styled(Grid)`\n    @media screen and (min-width: 1280px) {\n        height: 100vh;\n        width: 100%;\n        background: rgba(255, 255, 255, 0.4);\n        backdrop-filter: blur(50px);\n    }\n`;","import { FinanceAppContainer, AppImg, RegistrationPageText } from './RegistrationPageLeft.styled';\nimport homePageImg from '../../images/Frame-min.png';\n\nconst RegistrationPageLeft = () => {\n\n    return (\n        <FinanceAppContainer>\n                <AppImg src={homePageImg} alt=\"Finance App\" />\n                <RegistrationPageText>Finance App</RegistrationPageText> \n              </FinanceAppContainer>\n    )\n}\n\nexport default RegistrationPageLeft;","\nimport { Grid } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport Container from '@mui/material/Container';\nimport RegistrationForm from '../components/RegistrationForm/RegistrationForm'\nimport RegistrationPageLeft from 'components/RegistrationPageLeft/RegistrationPageLeft';\nimport {ContainerForBlur} from '../components/RegistrationPageLeft/RegistrationPageLeft.styled'\n\nconst RegistrationPage = () => {\n  \nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 320,\n      sm: 768,\n      md: 1280,\n    },\n  },\n})\n \n  return (\n    <Container>\n      <ThemeProvider theme={theme}>\n        <Grid\n          container spacing={0}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\">\n          <Grid item xs={12} sm={12} md={5}>\n            <RegistrationPageLeft />\n            </Grid>\n            <ContainerForBlur item xs={12} sm={12} md={7}>\n              <RegistrationForm />\n            </ContainerForBlur>\n          \n        </Grid>\n      </ThemeProvider>\n      \n    </Container>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["MainLogo","styled","LoginPageContainer","LoginPageDesktopContainer","MainFrame","SvgFrame","MainFrameText","LogForm","Form","LogBtns","LoginBtn","RegisterBtn","Input","Field","InputField","InputLabel","Svg","SvgWrapper","ErrorText","FormContainer","FormName","ButtonStyles","props","css","color","bgColor","border","borderColor","navigate","useNavigate","type","register","onClick","login","ProgressBar","schema","yup","shape","email","required","password","confirmPassword","name","emailInputId","nanoid","passwordInputId","ConfirmPasswordInputId","nameInputId","FormError","render","message","src","logo","height","alt","initialValues","validationSchema","onSubmit","values","resetForm","console","log","validateOnChange","autoComplete","htmlFor","svgMail","id","placeholder","svgLock","Button","FinanceAppContainer","AppImg","RegistrationPageText","ContainerForBlur","Grid","homePageImg","theme","createTheme","breakpoints","xs","sm","md","Container","ThemeProvider","container","spacing","direction","justifyContent","alignItems","item"],"sourceRoot":""}