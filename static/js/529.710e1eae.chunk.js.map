{"version":3,"file":"static/js/529.710e1eae.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/LoginForm/LoginForm.styled.js","components/RegistrationPageLeft/RegistrationPageLeft.jsx","components/RegistrationPageLeft/RegistrationPageLeft.styled.js","images/symbol-defs.svg","components/RegistrationForm/RegistrationForm.styled.js","components/PasswordProgressBar/PasswordProgressBar.styled.js","components/PasswordProgressBar/PasswordProgressBar.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n// import Button from '@mui/material/Button';\n\nconst dynamicStyles = props =>\n    css`\n    color: ${props.color}; \n    background-color: ${props.bgColor};\n    border: ${props.border}; \n    border-color: ${props.borderColor};\n    `\n\nexport const ButtonStyles = styled.button`\nfont-family: 'Circe';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 18px;\nline-height: 27px;\ntext-align: center;\nletter-spacing: 0.1em;\ntext-transform: uppercase;\njustify-content: center;\n \ndisplay: flex;\nmargin-right: auto;\nmargin-left: auto;\nmargin-bottom: 20px;\npadding: 13px;\nborder-radius: 20px; \nwidth: 300px;\nheight: 50px;\n\ncursor: pointer;\noutline: none; \n\n:disabled,\nbutton[disabled]{\n  border: 1px solid #E0E0E0;\n  background-color: #E0E0E0;\n  color: #ffffff;\n  cursor: wait;\n}\n \n${dynamicStyles}\n\n\n@media screen and (max-width: 767px) {\n    width: 280px;\n  }\n`;\n\n","// import { useNavigate   } from 'react-router-dom';\nimport { ButtonStyles } from './Button.styled';\n\nconst Button = (props) => {\n    \n    // const navigate = useNavigate();\n    // const onClick = () => {\n    //     navigate('/login')\n    // }\n    \n    return (\n        <div>\n            <ButtonStyles\n                type={props.type}\n                color={props.color}\n                bgColor={props.bgColor}\n                border={props.border}\n                onClick={props.onClick}\n                disabled={props.password !== props.confirmPassword}\n                borderColor={props.borderColor}\n            >\n                {props.buttonTitle} </ButtonStyles>\n            \n            {/* <ButtonStyles\n                type={props.buttonType}\n                onClick={props.onClick}\n                color='#4A56E2'\n                bgColor='#ffffff'\n                // border='solid'\n                borderColor='#4A56E2'\n            >\n                {props.login}</ButtonStyles> */}\n        </div>\n    )\n}\n\nexport default Button;","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const MainLogo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 120px;\n  height: 30px;\n  margin-left:auto;\n  margin-right:auto;\n  margin-bottom: 60px;\n  /* @media screen and (min-width: 768px) {\n    width: 180px;\n    height: 40px;\n    justify-content:center;\n  } */\n`;\n\nexport const LoginPageContainer = styled.div`\nposition: relative;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 107px 20px;\n  width: 100%;\n  height: 100vh;\n  @media screen and (max-width: 767px) {\n    background-color: #FFFFFF;\n  }\n  @media screen and (min-width: 768px) and (mix-width: 1279px) {\n    padding: 60px 118px 196px 118px;\n    height: 100vh;\n    /* background-color: #E7EAF2; */\n    width: 100%;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 136px 84px 116px 84px;\n    height: 100vh;\n    /* background-color: #E7EAF2; */\n    width: 100%;\n    display:flex;\n    /* align-items:center; */\n    /* background: rgba(255, 255, 255, 0.4);\n    backdrop-filter: blur(50px); */\n\n  }\n`;\n\nexport const LoginPageDesktopContainer = styled.div`\n    @media screen and (min-width: 768px) {\n    /* padding: 60px 118px;\n    height: 616px;\n    background-color: #E7EAF2;\n    width: 100%; */\n    display: flex;\n    flex-direction: column;\n    background-color: #FFFFFF;\n    margin-right: auto;\n    margin-left: auto;\n    margin-top: 50px;\n    padding: 40px 60px 60px 60px;\n    width: 534px;\n    height: 468px;\n    border-radius: 20px;\n\n  }\n\n   @media screen and (min-width: 1280px) {\n    margin: 136px 91px 116px 107px\n   }\n`;\n\nexport const MainFrame = styled.div`\n@media screen and (max-width: 767px) {\n    display:none;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 498px;\n    margin-left: auto;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    margin-bottom:50px;\n  }\n \n  @media screen and (min-width: 1280px) {\n    /* padding: 136px 84px 116px 84px; */\n    /* height: 100vh; */\n    width: 435px;\n    height: 420px;\n    /* background-color: #E7EAF2; */\n    /* width: 100%; */\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    margin:0; \n  }\n`;\n\nexport const SvgFrame = styled.img`\n@media screen and (min-width: 1280px) {\n    width:435px;\n    height:420px;\n    margin-bottom:30px;\n  }\n`;\n\nexport const MainFrameText = styled.p`\n  @media screen and (min-width: 768px) {\n    width: 187px;\n    height: 45px;\n    margin-left:40px;\n    font-family: 'Poppins';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 45px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    color: #000000;\n    /* z-index: 1; */\n  }\n`;\n\nexport const LogForm = styled(Form)`\n  display: flex;\n  /* -webkit-box-pack: center; */\n  justify-content: center;\n  flex-direction: column;\n  /* -webkit-box-align: center; */\n  align-items: center;\n`;\n\nexport const LogBtns = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* -webkit-box-pack: center; */\n  justify-content: center;\n`;\n\nexport const LoginBtn = styled.button`\n  width: 280px;\n  height: 50px;\n  border-radius: 20px;\n  border: none;\n  background-color: #24cca7;\n  padding: 13px 98px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #ffffff;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const RegisterBtn = styled.button`\n  text-decoration: none;\n  width: 280px;\n  height: 50px;\n  border-radius: 20px;\n  border: 1px solid #4a56e2;\n  background-color: #ffffff;\n  padding: 13px 60px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  text-decoration:none;\n  color: #4a56e2;\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 0;\n  width: 100%;\n  height: 32px;\n  display: block;\n  margin-left: 20px;\n  border: none;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 27px;\n  color: #BDBDBD;\n`;\n\nexport const InputField = styled.div`\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #e0e0e0;\n`;\n\nexport const InputLabel = styled.label`\n  width: 280px;\n  /* border-bottom: 1px solid #e0e0e0; */\n  margin-bottom: 40px;\n  @media screen and (min-width: 768px) {\n    width: 400px\n  }\n`;\n\nexport const Svg = styled.img`\n/* width:24px;\nheight:24px; */\n  /* margin-left: 10px; */\n`;\n\nexport const SvgWrapper = styled.span`\nwidth:24px;\nheight:24px;\nmargin-left: 10px;\ndisplay:flex;\nalign-items: center;\njustify-content: center;\n`;\n\nexport const ErrorText = styled.p`\n  display: flex;\n  justify-content: center;\n  font-size: 12px;\n  color: red;\n`;\n\nexport const EllipseTop = styled.img`\n/* position: absolute;\n/* z-index: -2; */\n/* left: -50px;\ntop: 585px; */\n`\n\nexport const EllipseBottom = styled.img`\n    /* content: \"\";\n    position: absolute;\n    display: block;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(/static/media/purple_elipse.488cddf5.svg);\n    background-position: bottom -130px left -142px;\n    z-index: -1; */\n`\n\n// const ErrorMessage = styled.p`\n//     margin-top: 6px;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n// `;\n\n// const InputWrapper = styled.div`\n//     padding: 8px 0;\n//     margin-right: auto;\n//     display: flex;\n//     align-items: baseline;\n//     border-bottom: 2px solid #BDBDBD;\n// `;\n\n// const Label = styled.label`\n// width: 280px\n// `;\n\n// const MainWrapper = styled.form`\n// display: flex;\n// flex-direction: column;\n// `;\n\n//общий див\n\n/* margin-left: auto;\n    margin-right: auto;\n    padding: 20px;\n    width: 100%;\n    height: 100%; */\n\n//стили формы\n\n/* display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    flex-direction: column;\n    -webkit-box-align: center;\n    align-items: center; */\n\n//стили инпута\n\n/* width: 280px;\n    height: 36px;\n    color: rgb(0, 0, 0);\n    padding-top: 5px;\n    padding-bottom: 5px;\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    border-image: initial;\n    border-bottom: 1px solid rgb(224, 224, 224);\n    background: transparent;\n    display: block;  */\n\n//стили кнопки\n\n/* font-family: Verdana;\n    height: 44px;\n    width: 182px;\n    font-weight: 700;\n    font-size: 14px;\n    background: rgb(252, 132, 45);\n    color: rgb(255, 255, 255);\n    border: 2px solid rgb(252, 132, 45);\n    border-radius: 30px;\n    box-shadow: rgb(252 132 45 / 50%) 0px 4px 10px;\n    padding-top: 13px;\n    padding-bottom: 13px;\n    margin-top: 20px;\n    margin-left: auto;\n    margin-right: auto; */\n\n","import { FinanceAppContainer, AppImg, RegistrationPageText } from './RegistrationPageLeft.styled';\nimport homePageImg from '../../images/Frame-min.png';\n\nconst RegistrationPageLeft = () => {\n\n    return (\n        <FinanceAppContainer>\n                <AppImg src={homePageImg} alt=\"Finance App\" />\n                <RegistrationPageText>Finance App</RegistrationPageText> \n              </FinanceAppContainer>\n    )\n}\n\nexport default RegistrationPageLeft;","import styled from '@emotion/styled';\nimport { Grid } from '@mui/material';\n\nexport const GridContainer = styled(Grid)`\n max-width: 1280px;\n height: 100%;\n padding: 0px;\n`;\n\nexport const FinanceAppContainer = styled.div`\n    display: none;\n\n    @media screen and (min-width: 768px) {\n        padding-top: 60px;  \n        display: flex;\n        justify-content: center;\n        min-height: 10em;\n        vertical-align: middle;\n    }\n\n    @media screen and (min-width: 1280px) {\n        display: inline;\n        align-items: flex-start;\n        /* padding-top: 155px;\n        padding-bottom: 155px; */\n    }\n`;\n\nexport const AppImg = styled.img`\n    @media screen and (min-width: 768px) {\n            width: 275px;\n            display: flex;\n    }\n\n    @media screen and (min-width: 1280px) {\n            width: 455px;\n    }\n`;\n\nexport const RegistrationPageText = styled.p`\n\n    @media screen and (min-width: 768px) {\n        font-family: 'Poppins';\n        font-style: normal;\n        font-weight: 400;\n        font-size: 30px;\n        line-height: 45px;\n    \n        display: flex;\n        align-items: center;\n    }\n\n    @media screen and (min-width: 1280px) {\n        /* text-align: center; */\n        justify-content: center;\n        margin-top: 30px;\n    }\n`;\n\nexport const ContainerForBlur = styled(Grid)`\n    @media screen and (min-width: 1280px) {\n        position: absolute;\n        bottom: 0px;\n        top: 0px;\n        left: 45%;\n       right: 0px;\n        /* height: 720px;\n        width: 100%; */\n        background: rgba(255, 255, 255, 0.4);\n        backdrop-filter: blur(50px);\n    }\n`;","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSymbolDefs(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-email\",\n    viewBox: \"0 0 33 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.333 5.333h-21.333c-1.467 0-2.653 1.2-2.653 2.667l-0.013 16c0 1.467 1.2 2.667 2.667 2.667h21.333c1.467 0 2.667-1.2 2.667-2.667v-16c0-1.467-1.2-2.667-2.667-2.667zM27.333 10.667l-10.667 6.667-10.667-6.667v-2.667l10.667 6.667 10.667-6.667v2.667z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-lock\",\n    viewBox: \"0 0 33 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.667 10.667h-1.333v-2.667c0-3.68-2.987-6.667-6.667-6.667s-6.667 2.987-6.667 6.667v2.667h-1.333c-1.467 0-2.667 1.2-2.667 2.667v13.333c0 1.467 1.2 2.667 2.667 2.667h16c1.467 0 2.667-1.2 2.667-2.667v-13.333c0-1.467-1.2-2.667-2.667-2.667zM16.667 22.667c-1.467 0-2.667-1.2-2.667-2.667s1.2-2.667 2.667-2.667 2.667 1.2 2.667 2.667-1.2 2.667-2.667 2.667zM20.8 10.667h-8.267v-2.667c0-2.28 1.853-4.133 4.133-4.133s4.133 1.853 4.133 4.133v2.667z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-person\",\n    viewBox: \"0 0 33 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.667 6.667v18.667c0 1.473 1.194 2.667 2.667 2.667v0h18.667c1.467 0 2.667-1.2 2.667-2.667v-18.667c0-1.467-1.2-2.667-2.667-2.667h-18.667c-1.473 0-2.667 1.194-2.667 2.667v0zM20.667 12c0 2.213-1.787 4-4 4s-4-1.787-4-4 1.787-4 4-4 4 1.787 4 4zM8.667 22.667c0-2.667 5.333-4.133 8-4.133s8 1.467 8 4.133v1.333h-16v-1.333z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSymbolDefs);\nexport default __webpack_public_path__ + \"static/media/symbol-defs.b6983a951380fa7743519f90d7a44354.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n// import { Button } from '@mui/material';\n// import { css } from '@emotion/react';\n\nexport const FormContainer = styled.div`\n  max-width: 400px;\n  padding: 32px 20px 36px 20px;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: #fff;\n\n  @media screen and (min-width: 768px) {\n    max-width: 533px;\n    height: 616;\n    margin: 48px auto;\n    padding: 40px 60px 46px 65px;\n    // box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    border-radius: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin: 52px 99px;\n  }\n`;\n\nexport const FormName = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 60px;\n`;\n\nexport const ContactField = styled(Field)`\n  position: relative;\n  width: 100%;\n  display: flex;\n  padding-bottom: 10px;\n  /* margin-top: 40px; */\n  border: transparent;\n\n  ::placeholder {\n    color: #bdbdbd;\n    font-family: 'Circe';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  fill: #e0e0e0;\n  width: 34px;\n  height: 34px;\n  /* margin-left: 10px; */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    color: #24cca7;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst dynamicStyles = props =>\n    css`\n    background-color: ${props.bgColor}; \n    border: 2px solid ${props.bgColor};\n    width: ${props.width};\n    `\n\nexport const ProgressBar = styled.div`\n    height: 4px;\n    border-radius: 10px;\n\n    ${dynamicStyles}\n`;","import React from \"react\";\nimport {ProgressBar} from './PasswordProgressBar.styled'\n\nconst PasswordProgressBar = ({password}) => {\n    // console.log(password);\n    return (\n        <div>\n            {password < 6 && <ProgressBar bgColor=\"#D22B2B\" width='25%'/>}\n            {password >= 6 && password < 9 && <ProgressBar bgColor=\"#E97451\" width='50%' />}\n            {password > 8 && password <= 10 && <ProgressBar bgColor=\"#24CCA7\" width='75%' />}\n            {password > 10 && <ProgressBar bgColor=\"#24CCA7\" width='100%' />}\n            {password > 12 && alert(\"Your password is too long\")}\n        </div>\n    )\n}\n\nexport default PasswordProgressBar;","import React, { useState, useEffect } from 'react';\nimport { Formik, ErrorMessage, useFormikContext } from 'formik';\nimport * as yup from 'yup';\nimport { toast } from 'react-toastify';\n// import { nanoid } from 'nanoid';\nimport logo from '../../images/logo.png';\nimport icon from '../../images/symbol-defs.svg';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\n// import operations from '../../redux/auth/auth-operation'\n\nimport { register } from '../../redux/auth/auth-operation';\n\nimport {\n  InputLabel,\n  LogForm,\n  InputField,\n  ErrorText,\n  Input,\n} from '../LoginForm/LoginForm.styled';\nimport { Icon, FormContainer, FormName } from './RegistrationForm.styled';\nimport Button from '../Button/Button';\nimport PasswordProgressBar from 'components/PasswordProgressBar/PasswordProgressBar';\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [name,setName] = useState('');\n\n  const style = {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: '12px'\n  }\n  // const isRegistered = useSelector(state => state.getIsRegister)\n  // isRegistered && dispatch(operations.logIn({ email, password }));\n\n  const schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().min(6).max(12).required(),\n    confirmPassword: yup.string().min(6).max(12).required(),\n    name: yup.string().min(1).max(12).required(),\n  });\n\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      const { email, password, name } = values;\n\n      // dispatch(register({ email, password, name }));\n\n      const { payload: errorCode } = await dispatch(register({ name, email, password }));\n      // console.log(errorCode.name );\n\n      if (errorCode.name === 'AxiosError') {\n        toast.error('Name length must be at least 2 characters long');\n        // resetForm();\n        return;\n      }\n\n      resetForm();\n      navigate('/login', { replace: true });\n      toast.success('You are registered');\n    } catch (error) {\n      toast.error('Oops! Something went wrong...');\n    }\n\n    // console.log(email, password, confirmPassword, name);\n  };\n\n  const handleClick = () => {\n    navigate('/login');\n  };\n\n  // const emailInputId = nanoid();\n  // const passwordInputId = nanoid();\n  // const ConfirmPasswordInputId = nanoid();\n  // const nameInputId = nanoid();\n\n  const FormObserver = () => {\n    const { values } = useFormikContext();\n    useEffect(() => {\n      setPassword(values.password);\n      setConfirmPassword(values.confirmPassword);\n      setName(values.name);\n    }, [values]);\n    return null;\n  };\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  return (\n    <FormContainer>\n      <FormName>\n        <img src={logo} height={40} alt={'wallet-logo'} />\n      </FormName>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n        validateOnChange\n      >\n        <LogForm autoComplete=\"off\">\n          <FormObserver />\n\n          <InputLabel htmlFor=\"email\">\n            <InputField>\n              <Icon width=\"24\" height=\"24\">\n                <use href={icon + '#icon-email'} />\n              </Icon>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                // id={emailInputId}\n                placeholder=\"E-mail\"\n              />\n            </InputField>\n            <FormError name=\"email\" />\n          </InputLabel>\n\n          <InputLabel htmlFor=\"password\">\n            <InputField>\n              <Icon width=\"24\" height=\"24\">\n                <use href={icon + '#icon-lock'} />\n              </Icon>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                // id={passwordInputId}\n                placeholder=\"Password\"\n              />\n            </InputField>\n            {password && <PasswordProgressBar password={password.length} />}\n            {password && password.length < 6 && (\n              <p style={style}>Passwords should be at least 6 signs</p>\n            )}\n            {/* <FormError name=\"password\" /> */}\n          </InputLabel>\n\n          <InputLabel htmlFor=\"confirmPassword\">\n            <InputField>\n              <Icon width=\"24\" height=\"24\">\n                <use href={icon + '#icon-lock'} />\n              </Icon>\n              <Input\n                type=\"password\"\n                name=\"confirmPassword\"\n                // id={ConfirmPasswordInputId}\n                placeholder=\"Confirm password\"\n              />\n            </InputField>\n            {confirmPassword && password !== confirmPassword && (\n              <p style={style}>Passwords should be the same</p>\n            )}\n\n            <FormError name=\"confirmPassword\" />\n          </InputLabel>\n\n          <InputLabel htmlFor=\"name\">\n            <InputField>\n              <Icon width=\"24\" height=\"24\">\n                <use href={icon + '#icon-person'} />\n              </Icon>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                // id={nameInputId}\n                placeholder=\"Name\"\n              />\n            </InputField>\n            {name && name.length < 2 && (\n              <p style={style}>Name length must be at least 2 characters long</p>\n            )}\n            <FormError name=\"name\" />\n          </InputLabel>\n\n          <Button\n            buttonTitle=\"REGISTER\"\n            password={password}\n            confirmPassword={confirmPassword}\n            name={name}\n            type=\"submit\"\n            color=\"#fff\"\n            bgColor=\"#24CCA7\"\n            border=\"none\"\n          />\n\n          <Button\n            buttonTitle=\"LOG IN\"\n            onClick={handleClick}\n            type=\"button\"\n            color=\"#4A56E2\"\n            bgColor=\"#ffffff\"\n            borderColor=\"#4A56E2\"\n          />\n        </LogForm>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default RegistrationForm;\n","\nimport { Grid } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport Container from '@mui/material/Container';\nimport RegistrationForm from '../components/RegistrationForm/RegistrationForm'\nimport RegistrationPageLeft from 'components/RegistrationPageLeft/RegistrationPageLeft';\nimport { GridContainer} from '../components/RegistrationPageLeft/RegistrationPageLeft.styled'\n\nconst RegistrationPage = () => {\n  \nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      sm: 320,\n      md: 768,\n      lg: 1280,\n    },\n  },\n})\n \n  return (\n    <Container>\n      <ThemeProvider theme={theme}>\n        <GridContainer\n          container spacing={1}\n          direction=\"row\"\n          maxWidth=\"1280px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item sm={12} md={12} lg={5}>\n            <RegistrationPageLeft />\n            </Grid>\n          <Grid item sm={12} md={12} lg={7}>\n            {/* <ContainerForBlur> */}\n              <RegistrationForm />\n            {/* </ContainerForBlur> */}\n              \n          </Grid>\n          \n        </GridContainer>\n      </ThemeProvider>\n      \n    </Container>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["ButtonStyles","styled","props","css","color","bgColor","border","borderColor","type","onClick","disabled","password","confirmPassword","buttonTitle","MainLogo","LoginPageDesktopContainer","LogForm","Form","LogBtns","LoginBtn","RegisterBtn","Input","Field","InputField","InputLabel","Svg","SvgWrapper","ErrorText","src","homePageImg","alt","GridContainer","Grid","FinanceAppContainer","AppImg","RegistrationPageText","FormContainer","FormName","Icon","ProgressBar","width","alert","dispatch","useDispatch","navigate","useNavigate","useState","setPassword","setConfirmPassword","name","setName","style","textAlign","fontSize","schema","yup","shape","email","required","min","max","handleSubmit","values","resetForm","register","payload","toast","replace","FormObserver","useFormikContext","useEffect","FormError","render","message","logo","height","initialValues","validationSchema","onSubmit","validateOnChange","autoComplete","htmlFor","href","icon","placeholder","length","Button","theme","createTheme","breakpoints","sm","md","lg","Container","ThemeProvider","container","spacing","direction","maxWidth","justifyContent","alignItems","item","RegistrationPageLeft"],"sourceRoot":""}